# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
#tra

- script: |
    echo "========================================"
    echo "pwd"
    echo "========================================"
    pwd
    echo "========================================"
    echo "printenv"
    echo "========================================"
    printenv
    echo "========================================"
    echo "tree"
    echo "========================================"
    tree .
  displayName: 'Print environment'

- script: |
    export ARM_CLIENT_ID=$(ARM_CLIENT_ID)
    export ARM_CLIENT_SECRET=$(ARM_CLIENT_SECRET)
    export ARM_SUBSCRIPTION_ID=$(ARM_SUBSCRIPTION_ID)
    export ARM_TENANT_ID=$(ARM_TENANT_ID)
    terraform version
    terraform -chdir=infra init
  displayName: 'Terraform Init'
  env:
      ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)

- script: |
    terraform -chdir=infra plan -out plan.tfplan
  displayName: 'Terraform Plan'
  env:
      ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)

- script: |
      terraform -chdir=infra apply plan.tfplan
  displayName: 'Terraform Apply'
  env:
      ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)


#
#- task: TerraformInstaller@0
#  displayName: install terraform
#  inputs:
#    terraformVersion: latest
#
#- task: TerraformCLI@0
#  displayName: 'check terraform version'
#  inputs:
#    command: version
